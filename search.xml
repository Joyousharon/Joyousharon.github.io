<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>按摩</title>
      <link href="/undefined/%E6%8C%89%E6%91%A9/"/>
      <url>/undefined/%E6%8C%89%E6%91%A9/</url>
      
        <content type="html"><![CDATA[<h1 id="按摩"><a href="#按摩" class="headerlink" title="按摩"></a>按摩</h1><p>从何时开始，我跟他们会面的休闲项目都变成了按摩？<br>可，我们按摩的次数也是屈指可数啊。</p><hr><h2 id="第一次按摩"><a href="#第一次按摩" class="headerlink" title="第一次按摩"></a>第一次按摩</h2><p><strong>第一次按摩</strong>是从什么时候开始的？回想起来，好像还是在20年的冬天。我记得好像是我那个叫<code>永康</code>的室友因为相亲回来不痛快，好像还喝了点酒。然后晚上八九点我俩就团了一个附近的按摩店过去了。<br>到了以后老板就给我们领到一个房间，等我们换完衣服没一会俩技师们就各端着一个大盆子进来了。<br>然后就泡脚按脚，聊天，按摩身子。当然，都是正经按摩。没啥不正经的。第一次按摩也没经验，体验体验就得了。<br>一个半小时的钟很快就结束了。然后我们就出来了。<br>我问<code>永康</code>这么正规的吗？ 他笑着说不正规的都在二楼那。。<br>哈，算了毕竟第一次体验，要什么自行车了。<br>然后我俩咱路边街上买了点小吃就回去了。<br>无话。</p><hr><h2 id="第二次按摩"><a href="#第二次按摩" class="headerlink" title="第二次按摩"></a>第二次按摩</h2><p><strong>第二次按摩</strong>是在23年国庆节吧。大学毕业以后难得的一次聚会，吃了两场还要去唱歌，结果就剩下仨人了。然后仨人去唱歌了，唱的没意思，又提议去按摩店。<br>好容易找了个按摩店，然后仨人一起一边按摩一边吹牛逼，瞎扯。好像五六点出来的吧，然后就回酒店睡觉了。<br>简简单单的，都还好。</p><h2 id="第三次按摩"><a href="#第三次按摩" class="headerlink" title="第三次按摩"></a>第三次按摩</h2><p><strong>第三次按摩</strong>经历是，是24年一月底，年前了他俩过来洛阳玩。<br>晚上十点到了，然后又没地方去，就又要找地方过夜了。<br>找来找去还是随便找了个地方。却也是个入门级别的<br>按摩按了一会就挑逗你，然后，然后说加钟可以打手枪<br>挺不喜欢的，口也不给口。<br>算了算了。老老实实的算了</p><h2 id="第四次按摩"><a href="#第四次按摩" class="headerlink" title="第四次按摩"></a>第四次按摩</h2><p><strong>第四次按摩</strong>是什么时候？<br>哦，是张大炮结婚那天啊。我们一起过去的，然后，然后晚上在酒店无聊就又跑去市里玩了。<br>然后他是正经的按摩+不正经的服务了。乌龙到我身上了，等了半个钟都没人过来。<br>然后就退了，然后就直接找人找地方了。<br>第一次经历，挺丢人的。以后也不再想有这感觉了。<br>结束以后又开车回酒店睡大觉了。<br>睡起来就办正事张罗张大炮的婚礼了。</p><p>其实这次给我感触还是挺深的。小哲，应该是我们几个男生里最老实本分的男人了吧，至少在对待感情或者说男女关系方面，他能干这事着实让我挺意外的。</p><h2 id="总的来说"><a href="#总的来说" class="headerlink" title="总的来说"></a>总的来说</h2><p>现在回想过往，所谓按摩也就这么四次。而且四次有三次都是别人请的。第一次是因为自己至少还不差钱。哪像这几年，竟然能混的让自己身无分文的地步。<br>呵呵<br>可是，我能怎么办呢？我也不知道啊</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>她的梦</title>
      <link href="/undefined/%E5%A5%B9%E7%9A%84%E6%A2%A6/"/>
      <url>/undefined/%E5%A5%B9%E7%9A%84%E6%A2%A6/</url>
      
        <content type="html"><![CDATA[<p>梦<br>我知道我在做梦，<br>开头的故事我忘记了，<br>我记得我在云中飞行，从第一视角穿过一道道厚厚的白色云层，不知飞了多久，我依稀记得天边火红的夕阳和晚霞，好像没用夕阳，又好像有，只记得白色的云层尽头一片火烧云景象<br>似乎我的梦要醒了，梦境好像出现了断层<br>然后我又在地面了，<br>似乎不是森林，但梦中的树木和路边的叶子却是童话里的样子<br>我想起来描述场景的词汇是爱丽丝梦游仙境，可是我也没看过这个故事啊<br>再后来，梦里的故事怎样了，我记不得了<br>真的记不得了</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Halo博客doker搭建-1</title>
      <link href="/undefined/halo%E6%90%AD%E5%BB%BA%E8%84%9A%E6%9C%AC-1/"/>
      <url>/undefined/halo%E6%90%AD%E5%BB%BA%E8%84%9A%E6%9C%AC-1/</url>
      
        <content type="html"><![CDATA[<h1 id="升级-packages"><a href="#升级-packages" class="headerlink" title="升级 packages"></a>升级 packages</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo -i # 切换到 root 用户</span><br><span class="line"></span><br><span class="line">apt update -y  # 升级 packages</span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git -y  # Debian 系统比较干净，安装常用的软件</span><br></pre></td></tr></table></figure><h2 id="添加SWAP虚拟内存"><a href="#添加SWAP虚拟内存" class="headerlink" title="添加SWAP虚拟内存"></a>添加SWAP虚拟内存</h2><p>注意：VPS 的内存如果过小，建议设置一下 SWAP，一般为内存的 1-1.5 倍即可，可以让系统运行更流畅！<br>设置 SWAP 可以用脚本:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; chmod +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><p>选择<strong>18</strong>，然后输入你想要扩容的数值即可(一般为内存的 1-1.5 倍即可)。</p><h2 id="安装-Docker-环境"><a href="#安装-Docker-环境" class="headerlink" title="安装 Docker 环境"></a>安装 Docker 环境</h2><h3 id="安装-Docker（非大陆服务器）-预览"><a href="#安装-Docker（非大陆服务器）-预览" class="headerlink" title="安装 Docker（非大陆服务器） 预览"></a>安装 Docker（非大陆服务器） 预览</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- get.docker.com | bash</span><br><span class="line">docker -v  #查看 docker 版本</span><br><span class="line">systemctl enable docker  # 设置开机自动启动</span><br></pre></td></tr></table></figure><h3 id="安装-Docker-compose（非大陆服务器）-预览"><a href="#安装-Docker-compose（非大陆服务器）-预览" class="headerlink" title="安装 Docker-compose（非大陆服务器） 预览"></a>安装 Docker-compose（非大陆服务器） 预览</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L &quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span><br><span class="line">sudo chmod +x /usr/local/bin/docker-compose</span><br><span class="line">docker-compose --version  #查看 docker-compose 版本</span><br></pre></td></tr></table></figure><h2 id="安装-Nginx-Proxy-Manager"><a href="#安装-Nginx-Proxy-Manager" class="headerlink" title="安装 Nginx Proxy Manager"></a>安装 Nginx Proxy Manager</h2><p>创建安装目录<br>创建一下安装的目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line">mkdir -p /root/data/docker_data/npm</span><br><span class="line"></span><br><span class="line">cd /root/data/docker_data/npm</span><br></pre></td></tr></table></figure><p>这边我们直接用 docker 的方式安装。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 i</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">version: &#x27;3&#x27;</span><br><span class="line">services:</span><br><span class="line">  app:</span><br><span class="line">    image: &#x27;jc21/nginx-proxy-manager:latest&#x27;</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    ports:</span><br><span class="line">      - &#x27;80:80&#x27;  # 保持默认即可，不建议修改左侧的80</span><br><span class="line">      - &#x27;81:81&#x27;  # 冒号左边可以改成自己服务器未被占用的端口</span><br><span class="line">      - &#x27;443:443&#x27; # 保持默认即可，不建议修改左侧的443</span><br><span class="line">    volumes:</span><br><span class="line">      - ./data:/data # 冒号左边可以改路径，现在是表示把数据存放在在当前文件夹下的 data 文件夹中</span><br><span class="line">      - ./letsencrypt:/etc/letsencrypt  # 冒号左边可以改路径，现在是表示把数据存放在在当前文件夹下的 letsencrypt 文件夹中</span><br></pre></td></tr></table></figure><p>按一下 esc，然后 :wq 保存退出，之后，</p><p>打开防火墙的端口 <code>81</code><br>查看端口是否被占用（以 81 为例），输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i:81  #查看 81 端口是否被占用，如果被占用，重新自定义一个端口</span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-bash: lsof: command not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install lsof  #安装 lsof</span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 82，注意 docker 命令行里和防火墙都要改）</p><h2 id="运行并访问-Nginx-Proxy-Manager"><a href="#运行并访问-Nginx-Proxy-Manager" class="headerlink" title="运行并访问 Nginx Proxy Manager"></a>运行并访问 Nginx Proxy Manager</h2><p>最后：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /root/data/docker_data/npm   # 来到 dockercompose 文件所在的文件夹下</span><br><span class="line"></span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>理论上我们就可以输入<code>http://ip:81</code> 访问了。</p><p>默认登陆名和密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Email:    admin@example.com</span><br><span class="line">Password: changeme</span><br></pre></td></tr></table></figure><p>注意：</p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p><h2 id="更新-Nginx-Proxy-Manager"><a href="#更新-Nginx-Proxy-Manager" class="headerlink" title="更新 Nginx Proxy Manager"></a>更新 Nginx Proxy Manager</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cd /root/data/docker_data/npm</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line">cp -r /root/data/docker_data/npm /root/data/docker_data/npm.archive  # 万事先备份，以防万一</span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    # 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span><br><span class="line"></span><br><span class="line">docker image prune  # prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to continue? [y/N]</span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h2 id="卸载-Nginx-Proxy-Manager"><a href="#卸载-Nginx-Proxy-Manager" class="headerlink" title="卸载 Nginx Proxy Manager"></a>卸载 Nginx Proxy Manager</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /root/data/docker_data/npm</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line">rm -rf /root/data/docker_data/npm  # 完全删除映射到本地的数据</span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Halo博客doker搭建-2</title>
      <link href="/undefined/halo%E6%90%AD%E5%BB%BA%E8%84%9A%E6%9C%AC-2/"/>
      <url>/undefined/halo%E6%90%AD%E5%BB%BA%E8%84%9A%E6%9C%AC-2/</url>
      
        <content type="html"><![CDATA[<h1 id="创建安装目录"><a href="#创建安装目录" class="headerlink" title="创建安装目录"></a>创建安装目录</h1><p>创建一下安装的目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line">mkdir -p /root/data/docker_data/halo</span><br><span class="line"></span><br><span class="line">cd /root/data/docker_data/halo</span><br></pre></td></tr></table></figure><p>这边我们直接用 docker 的方式安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">halo:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">halohub/halo:2.2.0</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">halo</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">on-failure:3</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="attr">halodb:</span></span><br><span class="line">        <span class="attr">condition:</span> <span class="string">service_healthy</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">halo_network:</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./:/root/.halo2</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8090:8090&quot;</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--spring.r2dbc.url=r2dbc:pool:mysql://halodb:3306/halo</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--spring.r2dbc.username=root</span></span><br><span class="line">      <span class="comment"># MySQL 的密码，请保证与下方 MYSQL_ROOT_PASSWORD 的变量值一致。</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--spring.r2dbc.password=o#DwN&amp;JSa56</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--spring.sql.init.platform=mysql</span></span><br><span class="line">      <span class="comment"># 外部访问地址，请根据实际需要修改</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--halo.external-url=http://localhost:8090/</span></span><br><span class="line">      <span class="comment"># 初始化的超级管理员用户名</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--halo.security.initializer.superadminusername=admin</span></span><br><span class="line">      <span class="comment"># 初始化的超级管理员密码</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--halo.security.initializer.superadminpassword=P@88w0rd</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">halodb:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:8.0.31</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">halodb</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">on-failure:3</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">halo_network:</span></span><br><span class="line">    <span class="attr">command:</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="string">--default-authentication-plugin=mysql_native_password</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--character-set-server=utf8mb4</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--collation-server=utf8mb4_general_ci</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--explicit_defaults_for_timestamp=true</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./mysql:/var/lib/mysql</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./mysqlBackup:/data/mysqlBackup</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3306&quot;</span></span><br><span class="line">    <span class="attr">healthcheck:</span></span><br><span class="line">      <span class="attr">test:</span> [<span class="string">&quot;CMD&quot;</span>, <span class="string">&quot;mysqladmin&quot;</span>, <span class="string">&quot;ping&quot;</span>, <span class="string">&quot;-h&quot;</span>, <span class="string">&quot;127.0.0.1&quot;</span>, <span class="string">&quot;--silent&quot;</span>]</span><br><span class="line">      <span class="attr">interval:</span> <span class="string">3s</span></span><br><span class="line">      <span class="attr">retries:</span> <span class="number">5</span></span><br><span class="line">      <span class="attr">start_period:</span> <span class="string">30s</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="comment"># 请修改此密码，并对应修改上方 Halo 服务的 SPRING_R2DBC_PASSWORD 变量值</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_ROOT_PASSWORD=o#DwN&amp;JSa56</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_DATABASE=halo</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">halo_network:</span></span><br></pre></td></tr></table></figure><p>注意：<code>docker-compose.yml</code> 里面的<code>--halo.external-url=http://localhost:8090/</code> ，其中的<code>http://localhost:8090/</code>需要更改为你的域名，如果你打算用的域名是<code>abc.com</code>也就是要改成<code>--halo.external-url=https://abc.com</code></p><p>版本号<code>2.6.0</code>，可以看这边：<a href="https://github.com/halo-dev/halo/releases">https://github.com/halo-dev/halo/releases</a>   保证自己是新版本～</p><p>接着，千万记得改密码！！！</p><h2 id="打开服务器防火墙（非必需）并访问网页"><a href="#打开服务器防火墙（非必需）并访问网页" class="headerlink" title="打开服务器防火墙（非必需）并访问网页"></a>打开服务器防火墙（非必需）并访问网页</h2><p>打开防火墙的端口 <code>8090</code><br>查看端口是否被占用（以 <code>8090</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i:8090  <span class="comment">#查看 8090 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/halo    <span class="comment"># 来到 dockercompose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>理论上我们就可以输入 <code>http://ip:8090</code> 访问安装了。<br><strong>注意：</strong></p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p><h3 id="5-4-更新-halo"><a href="#5-4-更新-halo" class="headerlink" title="5.4 更新 halo"></a>5.4 更新 halo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/halo</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/halo /root/data/docker_data/halo.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N]</span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h3 id="5-5-卸载-halo"><a href="#5-5-卸载-halo" class="headerlink" title="5.5 卸载 halo"></a>5.5 卸载 halo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/halo</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/halo  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2><h3 id="利用-Nginx-Proxy-Manager"><a href="#利用-Nginx-Proxy-Manager" class="headerlink" title="利用 Nginx Proxy Manager"></a>利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析.<br>之后，登陆 Nginx Proxy Manager（不会的看这个： <strong>安装 Nginx Proxy Manager</strong></p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p></blockquote><p><strong>IP 填写：</strong></p><p>如果 Nginx Proxy Manager 和 halo 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的 Docker 容器内部 IP。<br>否则直接填 <code>halo</code> 所在的服务器 IP 就行。<br>然后就可以用域名来安装访问了。</p><p>注意：<code>docker-compose.yml</code> 里面的<code>--halo.external-url=http://localhost:8090/</code> ，其中的<code>http://localhost:8090/</code>需要更改为你的域名，如果你的域名是<code>abc.com</code>也就是要改成<code>--halo.external-url=https://abc.com</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>她的梦里</title>
      <link href="/undefined/%E5%A5%B9%E7%9A%84%E6%A2%A6%E9%87%8C/"/>
      <url>/undefined/%E5%A5%B9%E7%9A%84%E6%A2%A6%E9%87%8C/</url>
      
        <content type="html"><![CDATA[<p>梦<br>我知道我在做梦，<br>开头的故事我忘记了，<br>我记得我在云中飞行，从第一视角穿过一道道厚厚的白色云层，不知飞了多久，我依稀记得天边火红的夕阳和晚霞，好像没用夕阳，又好像有，只记得白色的云层尽头一片火烧云景象<br>似乎我的梦要醒了，梦境好像出现了断层<br>然后我又在地面了，<br>似乎不是森林，但梦中的树木和路边的叶子却是童话里的样子<br>我想起来描述场景的词汇是爱丽丝梦游仙境，可是我也没看过这个故事啊<br>再后来，梦里的故事怎样了，我记不得了<br>真的记不得了</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>跨境电商的3.0时代：从运营到认知，如何赚钱更智慧？</title>
      <link href="/undefined/%E8%B7%A8%E5%A2%83%E7%94%B5%E5%95%86%E7%9A%843.0%E6%97%B6%E4%BB%A3%EF%BC%9A%E4%BB%8E%E8%BF%90%E8%90%A5%E5%88%B0%E8%AE%A4%E7%9F%A5%EF%BC%8C%E5%A6%82%E4%BD%95%E8%B5%9A%E9%92%B1%E6%9B%B4%E6%99%BA%E6%85%A7%EF%BC%9F/"/>
      <url>/undefined/%E8%B7%A8%E5%A2%83%E7%94%B5%E5%95%86%E7%9A%843.0%E6%97%B6%E4%BB%A3%EF%BC%9A%E4%BB%8E%E8%BF%90%E8%90%A5%E5%88%B0%E8%AE%A4%E7%9F%A5%EF%BC%8C%E5%A6%82%E4%BD%95%E8%B5%9A%E9%92%B1%E6%9B%B4%E6%99%BA%E6%85%A7%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<h3 id="跨境电商3-0时代：搞钱先搞脑，认知是你的核心竞争力"><a href="#跨境电商3-0时代：搞钱先搞脑，认知是你的核心竞争力" class="headerlink" title="跨境电商3.0时代：搞钱先搞脑，认知是你的核心竞争力"></a>跨境电商3.0时代：搞钱先搞脑，认知是你的核心竞争力</h3><p>在跨境电商的路上，你是否还在琢磨如何优化广告投放、精进供应链管理，或是努力寻找爆品？但现实是，行业早已进入3.0时代，赚钱的逻辑发生了翻天覆地的变化。<br>今天，我们将从跨境电商的三个时代出发，结合行业趋势与实际案例，深入探讨如何通过思维升级抓住新的机会，实现更智慧的财富积累。</p><h2 id="从1-0到3-0：跨境电商的进化之路"><a href="#从1-0到3-0：跨境电商的进化之路" class="headerlink" title="从1.0到3.0：跨境电商的进化之路"></a>从1.0到3.0：跨境电商的进化之路</h2><h3 id="1-0时代：捡钱的黄金期"><a href="#1-0时代：捡钱的黄金期" class="headerlink" title="1.0时代：捡钱的黄金期"></a>1.0时代：捡钱的黄金期</h3><p>回顾跨境电商的1.0时代，只能用“躺赚”来形容。这个阶段，平台规则还不成熟，市场竞争也不激烈。</p><p>模式：无论是大规模铺货还是精品单品模式，几乎人人都有机会赚钱。<br>特点：少投入，高回报，只要肯做就有利润。<br>这是跨境电商的“流量红利期”，但这种“机会主义”模式很快就随着行业的发展走向终结。</p><h3 id="2-0时代：精细化运营的比拼"><a href="#2-0时代：精细化运营的比拼" class="headerlink" title="2.0时代：精细化运营的比拼"></a>2.0时代：精细化运营的比拼</h3><p>到了2.0时代，平台规则逐步完善，竞争加剧。赚钱开始变得不再轻松：</p><p>竞争核心：供应链整合、资金周转效率、团队管理能力，以及运营的细致程度。<br>新挑战：产品利润被压缩，低价竞争者层出不穷，流量成本不断攀升。<br>精细化运营成为行业主旋律，只有那些深耕产品和运营的商家才能在激烈的竞争中脱颖而出。</p><h3 id="3-0时代：认知与长期主义的较量"><a href="#3-0时代：认知与长期主义的较量" class="headerlink" title="3.0时代：认知与长期主义的较量"></a>3.0时代：认知与长期主义的较量</h3><p>如今，跨境电商迈入3.0时代，竞争已经不再只是“技巧”层面的比拼，而是转向“认知高度”的较量：</p><p><strong>关键指标</strong>：利润率、投产比（ROI）、企业壁垒和长期竞争力。</p><p><strong>新的焦点</strong>：如何让公司活得更长久、更健康？赚到的钱应该如何科学配置，让财富不缩水？</p><p>在这个时代，<strong>更高效、更智慧的赚钱方式</strong>成为了新目标。成功的关键已经从“如何多赚”转变为“如何赚得**<strong>更久、更稳、更值</strong>”。</p><h2 id="3-0时代的“赚钱公式”：认知升级-模式创新"><a href="#3-0时代的“赚钱公式”：认知升级-模式创新" class="headerlink" title="3.0时代的“赚钱公式”：认知升级+模式创新"></a>3.0时代的“赚钱公式”：认知升级+模式创新</h2><h3 id="1-构建核心资产：打造自己的“护城河”"><a href="#1-构建核心资产：打造自己的“护城河”" class="headerlink" title="1.构建核心资产：打造自己的“护城河”"></a>1.构建核心资产：打造自己的“护城河”</h3><p>面对行业新常态，<strong>思维模式的迭代</strong>是决定胜负的关键。以下几点，或许可以成为跨境人转型升级的参考：</p><h3 id="构建核心资产：打造自己的“护城河”"><a href="#构建核心资产：打造自己的“护城河”" class="headerlink" title="构建核心资产：打造自己的“护城河”"></a>构建核心资产：打造自己的“护城河”</h3><p>过去的流量型业务不可持续，企业的长久生存依赖于自己的核心资产，包括：</p><p><strong>私域流量</strong>：建立独立站和客户社群，减少对平台的依赖。</p><p><strong>网红资源库</strong>：精准锁定行业意见领袖（KOL），提升品牌溢价和推广效率。</p><p><strong>数据资源库</strong>：积累客户消费数据和行为偏好，为长期运营提供支持。</p><p>这些资源不仅提升了利润空间，更是公司在激烈竞争中不可替代的核心壁垒。</p><h3 id="2-借力AI：降本增效的强大工具"><a href="#2-借力AI：降本增效的强大工具" class="headerlink" title="2.借力AI：降本增效的强大工具"></a>2.借力AI：降本增效的强大工具</h3><p>AI技术的普及为跨境电商打开了新的可能性：</p><p><strong>自动化选品</strong>：通过数据挖掘快速找到趋势商品。</p><p><strong>智能广告投放</strong>：精准触达目标用户，提升转化率。</p><p><strong>供应链优化</strong>：实时分析库存和销售数据，降低库存压力。</p><p>相比雇佣庞大的团队，AI能够以更低成本实现更大效益，帮助企业保持竞争力。</p><h3 id="3-标准化流程：团队精简化的必然之路"><a href="#3-标准化流程：团队精简化的必然之路" class="headerlink" title="3.标准化流程：团队精简化的必然之路"></a>3.标准化流程：团队精简化的必然之路</h3><p>臃肿的团队已经成为过去。现在，企业需要：</p><p><strong>建立标准化操作流程</strong>：将复杂的业务模块化，减少对个别人的依赖。</p><p><strong>优化用人结构</strong>：让小而高效的团队成为主流，通过流程精简和工具赋能提升效率。</p><p>精简团队不仅能控制成本，还能让企业更灵活地应对市场变化。</p><h3 id="4-重视资产配置：为财富保值增值"><a href="#4-重视资产配置：为财富保值增值" class="headerlink" title="4.重视资产配置：为财富保值增值"></a>4.重视资产配置：为财富保值增值</h3><p>如今，“钱不值钱”的趋势已经显现，单纯靠利润积累并不能应对通胀和货币贬值。</p><p><strong>合理投资组合</strong>：平衡股票、黄金、房地产等资产配置，降低风险。</p><p><strong>增加收益来源</strong>：考虑投资跨境相关的周边业务，比如物流、培训或供应链企业，形成多元化收入结构。</p><h3 id="5-解放时间：专注于深度思考与模式创新"><a href="#5-解放时间：专注于深度思考与模式创新" class="headerlink" title="5. 解放时间：专注于深度思考与模式创新"></a>5. 解放时间：专注于深度思考与模式创新</h3><p>3.0时代，不再需要“事必躬亲”的老板，而是需要懂得如何花时间在最重要的事情上：</p><p><strong>深度思考</strong>：从繁杂的日常事务中抽身，专注于制定更高效的商业模式。</p><p><strong>系统化管理</strong>：打造能够“自动运转”的企业，减少对自己参与度的依赖。</p><h3 id="6-打造被动收入：让钱“自动”为你工作"><a href="#6-打造被动收入：让钱“自动”为你工作" class="headerlink" title="6. 打造被动收入：让钱“自动”为你工作"></a>6. 打造被动收入：让钱“自动”为你工作</h3><p>持续的被动收入是企业和个人财务健康的保障：</p><p><strong>打造“赚钱机器”</strong>：通过自动化和标准化的系统，将业务转化为源源不断的收入流。</p><p><strong>复利效应</strong>：将利润循环投入到更多稳定收益的领域，放大财富效应。</p><h3 id="7-提升认知：你比竞争对手多知道一点，就能赢更多"><a href="#7-提升认知：你比竞争对手多知道一点，就能赢更多" class="headerlink" title="7. 提升认知：你比竞争对手多知道一点，就能赢更多"></a>7. 提升认知：你比竞争对手多知道一点，就能赢更多</h3><p>在这个时代，财富的核心逻辑不再是体力和时间的叠加，而是认知能力的较量：</p><p><strong>学习力决定生产力</strong>：持续学习新工具、新模式，是跨境人最核心的竞争力。</p><p><strong>组局能力</strong>：能够整合资源、建立有效合作关系，是3.0时代不可或缺的软实力。</p><h2 id="财富是认知的奖励，长久发展靠深度思考"><a href="#财富是认知的奖励，长久发展靠深度思考" class="headerlink" title="财富是认知的奖励，长久发展靠深度思考"></a>财富是认知的奖励，长久发展靠深度思考</h2><p>在跨境电商的3.0时代，单靠努力已经远远不够了。想要赚到钱，并让财富持续增值，我们需要做的是全面提升自己的认知能力。</p><p>从<strong>简单的铺货到精细化运营，再到如今的认知竞争</strong>，跨境电商的每一个进化阶段都充满了机遇，但也有相应的挑战。</p><p><strong>搞钱先搞脑</strong>，只有思维的改变才能带来更长久的成长。</p><p>现在，是时候重新审视自己的业务模式，抛弃那些“过时”的赚钱方法，为未来的长久发展找到新的突破口。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>何以缘起，凤相思</title>
      <link href="/undefined/%E4%BD%95%E4%BB%A5%E7%BC%98%E8%B5%B7%E5%87%A4%E7%9B%B8%E6%80%9D/"/>
      <url>/undefined/%E4%BD%95%E4%BB%A5%E7%BC%98%E8%B5%B7%E5%87%A4%E7%9B%B8%E6%80%9D/</url>
      
        <content type="html"><![CDATA[<p>H君第一次跟阿凤接触是在年假回家的路上，自己的同事也都跟他一样在回家过年的路上，刚好看到他们分公司同部门的同事还有值班的。于是就找了一个帮忙处理了一些工作的事情，这个人就是阿凤。<br>等工作的事都处理完了，H君在火车上也是无聊，就跟阿凤闲扯瞎聊了起来，然后知道双方都喜欢玩王者游戏，于是就随手加了微信。就这么在火车上断断续续聊了两天。后来H君也下车回家了，两人也基本没在聊天了，似乎双方就不曾认识过似的。就是过年那几天双方也都是牛头不对马嘴的闲聊过几句。<br>假期总是如此的短暂，7天的新年转眼就过完了。H君也踏上了南方的火车，继续在新的一年开启新的工作。<br>又回去上班了。因为一些工作的交集，H君和阿凤又开始有一没二的聊了起来，就这么一来二去，慢慢的从工作也就聊到了生活。<br>他们两个关系的亲近，是从那天的算命事件开始的。<br>那天，H君为了证明自己会算命技能，就紧迫阿凤的一张背影半身照猜出了阿凤的身高体重，这可真的让阿凤大吃一惊，以至于后来明知道那些算命什么的都是假的，但是阿凤却也想听他的忽悠。<br>有了第一次，后来H君就说帮阿凤看手相，然后就各种查资料，结合跟阿凤这几天的接触，做了一些切实的分析，更让阿芬对H的算命技能深信不疑了。于是阿凤也慢慢的向H透露心思，想知道她跟前任对象，到底还有没有未来了。<br>那一刻，H君应该也感觉到阿凤说这句话时候的心情。只是他并没有立即说什么，只是让她等自己算的结果。其实阿凤本来也不信，但是心里还是想给自己找个寄托。于是两个人除了工作，就天天聊生活聊经历聊日常。<br>后来经过H的思考，就把他们的命运说的悲观一点，一个属鸡一个属狗，就说他们在一起会鸡飞狗跳。阿凤也没说什么，只是慢慢的感觉到自己越来越依赖这个刚认识一周的H君。于是两人从上班到下班，从早上睁眼到半夜晚安，就好像总是有聊不完的话题似的。于是半个月不到，两个人也互有好感，从工作，到游戏，再到感情。似乎早已经是无话不谈的伴侣了。<br>但是两人都面临着一个很现实的残酷问题——异地，相隔几千公里，双方也只能每天在网上互诉心肠。但似乎也不影响双方每天的心情。<br>H君印象最深刻的是，那晚他们在聊感情的时候，阿凤说过这么一句话：好想抱抱你，每一次你安慰我的时候，自己的心得多疼了。也就是这句话，让H君感动了好一阵子。也更加想要和她有未来。<br>于是接下来两个人就天天一块打游戏，申请了新号，还用了情侣网名。虽是异地，但也天天好似那如胶似漆的小情侣。只是H君也知道，这么每天从醒来到晚安，这么不停的甜蜜，总会被什么打破的。但是他什么都没跟她说，这个也没必要说。<br>但是H君担心的事情还是发生了，他们有甜甜蜜蜜度过了一个周，差不多也就是他们真正在一起半个月的时间。一切的一切，也就在这天毫无征兆的改变了。<br>那天中午，吃了饭以后他们又向往常一样玩起了游戏，只是H君那天在看LOL比赛，一边和阿凤玩着王者荣耀。因为阿凤一般都用安琪拉一个英雄，H也没多想，那局还是一如既往的跟着安琪拉。但是打了一半发现，阿凤用的不是安琪拉。她就找到阿凤，然后有跟阿凤走在一路，那局比赛应该赢了，但是阿凤也因为他认错人而&#x3D;生气了。他再怎么道歉说好话，阿凤还是一直生气。两人就这么断断续续的一个道歉一个生气。本来也不是什么大事，应该没多久就可以哄好的吧。<br>但是，H没有想到的可怕的事情也紧跟着发生了。<br>中午休息时间，他看到阿凤在玩游戏，便点去看了一眼。结果他看到了一个貌似见过的ID，好熟悉。他退出来回忆了一下，又看了一下阿凤的游戏记录。这是她前任的ID。<br>呵，女人。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>何以缘灭凰归离</title>
      <link href="/undefined/%E4%BD%95%E4%BB%A5%E7%BC%98%E7%81%AD%E5%87%B0%E5%BD%92%E7%A6%BB/"/>
      <url>/undefined/%E4%BD%95%E4%BB%A5%E7%BC%98%E7%81%AD%E5%87%B0%E5%BD%92%E7%A6%BB/</url>
      
        <content type="html"><![CDATA[<p>About Me<br>Hi, 我应该是谁呢？<br>是一个三十三岁的平淡无奇而且还毫无作为的中年大叔吗？</p><p>还是一个迷失了自我，看不清前方方向的迷途者？</p><p>为了明天却还要放弃明天<br>为什么会这样，人不都是自由的吗？为什么被束缚的不只是肉体，还又灵魂呢？</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>你走以后</title>
      <link href="/undefined/%E4%BD%A0%E8%B5%B0%E4%BB%A5%E5%90%8E/"/>
      <url>/undefined/%E4%BD%A0%E8%B5%B0%E4%BB%A5%E5%90%8E/</url>
      
        <content type="html"><![CDATA[<p>我也恢复了原来的样子<br>不喜不悲<br>不会爱也不会渣<br>时而开心时而抑郁<br>时而迷茫时而清醒<br>脸上笑容少了，但依旧善良</p><p>也许我还能再勇敢一些<br>才能配得上你的爱情</p><p>我也曾想过做个上进的男人<br>想攒很多钱来娶你<br>那时候的我<br>感觉还是有快乐<br>可是，你走后<br>我都世界里再不知道<br>还有什么才是紧要的了<br>浑浑噩噩，行尸走肉<br>再感受不到快乐</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>小萝莉</title>
      <link href="/undefined/%E5%B0%8F%E8%90%9D%E8%8E%89/"/>
      <url>/undefined/%E5%B0%8F%E8%90%9D%E8%8E%89/</url>
      
        <content type="html"><![CDATA[<p>About Me<br>Hi, 我应该是谁呢？<br>是一个三十三岁的平淡无奇而且还毫无作为的中年大叔吗？</p><p>还是一个迷失了自我，看不清前方方向的迷途者？</p><p>为了明天却还要放弃明天<br>为什么会这样，人不都是自由的吗？为什么被束缚的不只是肉体，还又灵魂呢？</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>我的一个世俗朋友</title>
      <link href="/undefined/%E5%B0%8F%E8%AF%BA%E5%92%8C%E5%B0%8F%E9%9B%A8/"/>
      <url>/undefined/%E5%B0%8F%E8%AF%BA%E5%92%8C%E5%B0%8F%E9%9B%A8/</url>
      
        <content type="html"><![CDATA[<p>小诺跟小雨认识是在某个周末玩吃鸡游戏的时候。<br>当时两人也是随机匹配到的队友，就一块打了一下午游戏。两个人一个比一个菜，但这游戏嘛，重要的还是情绪，俩人就那么瞎扯了一下午。然后两人到了晚饭时间，就互加了微信，然后就各自下线了。<br>接下来的时间，小诺就跟小雨游戏，语音，聊天等，两人基本每晚都会聊天。小雨很笨，是个很傻很可爱，有很乐观的小姑娘。小诺也经常调戏她玩。而后小雨经常说的就是虽然我笨，但是我不傻好吗？就这样小诺就开始叫她傻子了，并且也给她加上了傻子的备注标签，而小雨给小诺的备注是神仙队友。<br>小诺就这么天天嘻嘻哈哈的调戏小雨。小雨也只是个单纯的傻姑娘。两人就这么过了半个月。<br>直到那天，小雨对小诺说，你以后不要再找我了。<br>小诺一惊，以为又是平时的小脾气，倒也没放在心上，随手回复：怎么了？<br>可能我喜欢上你了，我发现我对你有占有欲了。小雨犹豫了一会，说到。<br>啊？<br>你跟别人聊天，跟别人玩游戏，我心里也会不开心，会生气。 小雨又打过来文字。<br>我们只是朋友，是不是平时我玩笑开的太过分了？<br>还有我跟你们正常人不一样，所以以后你离我远一点就好了。<br>接下来再两人的聊天中，小诺大概知道了小雨的身世。<br>小雨，小时候出过一次车祸，后来伤到脚了，具体多严重，小语没具体说，但是也成了正常人眼里的残疾人。后来还在初中的小雨，也没心思读书了，就自己出去挣钱，辗转反侧就进了残疾人运动会，每天训练，到处参加残疾人运动会，这几年间也参加过大大小小的比赛。到认识小诺的时候已经有五六年的时间了。小雨还说，要是今年比赛还好还能进国家队参加奥运会了。但。。。这都是后话了。<br>他们两人在交谈过程中，小诺也表明了自己态度，自己和她只是朋友，诸多现实性因素，是不能和她在一起的。当然说明了并不是因为她身体的缺陷才这样。<br>的确，小诺并没有其实过残疾人，其实在他看来，像小雨这样积极乐观的人，已经很少见了。<br>小雨应该也相信小诺吧，但还是在两人交谈了一会后觉得还是删了吧，毕竟两人是一段不可能在一起的情感。<br>于是，小雨就删除了小诺。<br>小诺加了两次，小雨只是在验证消息回复了几次。两人就各自陷入了沉思。</p><p>几天之后的周末上午，小诺又再次添加小雨好友，心里也没底小雨会不会通过。果然，几个小时后，小雨在验证消息里问干嘛。小诺没有回复，就出门了。到了晚上，小诺看见小雨又出现在他的好友列表了，但是两人都没在说什么。<br>第二天，小诺还是给小雨发了信息。<br>两人僵硬的聊了下就又都回到了之前的感觉，只是彼此都小心了许多。<br>小雨告诉他，她现在在国外，迪拜，出来比赛，可能半个月才能回去。小诺就开玩笑说让小雨在那边帮他捡点钱回来。小雨说死开，有钱捡还能等到你说。就这样俩人又开始每天了每天的聊天。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>我是谁？</title>
      <link href="/undefined/%E6%88%91%E6%98%AF%E8%B0%81/"/>
      <url>/undefined/%E6%88%91%E6%98%AF%E8%B0%81/</url>
      
        <content type="html"><![CDATA[<p>About Me<br>Hi, 我应该是谁呢？<br>是一个三十三岁的平淡无奇而且还毫无作为的中年大叔吗？</p><p>还是一个迷失了自我，看不清前方方向的迷途者？</p><p>为了明天却还要放弃明天<br>为什么会这样，人不都是自由的吗？为什么被束缚的不只是肉体，还又灵魂呢？</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
